{
  "index.html": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Conformational ensemble size modeller</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/buefy/dist/buefy.min.css\">\n    <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900'>\n    <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/@mdi/font@5.x/css/materialdesignicons.min.css'>\n    <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Material+Icons'>\n    <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/vuetify@2.3.20/dist/vuetify.min.css'>\n    <link rel='stylesheet' href='https://use.fontawesome.com/releases/v5.0.6/css/all.css'>\n</head>\n\n<body>\n    <div id=\"app\">\n        <v-app id=\"vuetify-app\">\n<section>\n    <b-field label=\"High-RMSD analysis and fitting mode\">\n        <b-select placeholder=\"\" v-model=\"high_ana_mode.value\">\n            <option\n                v-for=\"option in [{'text': 'No high-RMSD analysis or fitting', 'value': 'no'}, {'text': 'No high-RMSD fitting, but show detected threshold for comparison', 'value': 'no,threshold'}, {'text': 'No high-RMSD fitting, but show thresholded randombest for comparison', 'value': 'no,random'}, {'text': 'Fit only on threshold', 'value': 'threshold'}, {'text': 'Fit only on threshold, but show thresholded randombest for comparison', 'value': 'threshold,random'}, {'text': 'Fit on thresholded randombest', 'value': 'random'}]\"\n                :value=\"option.value\"\n                :key=\"option.value\">\n                {{ option.text }}\n            </option>\n        </b-select>\n    </b-field>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-9559\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-9559\">\n                        <p class=\"card-header-title\">\n                            Threshold best-of factor\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"high_comp_threshold_factor.value\" v-model.number=\"high_comp_threshold_factor.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"high_comp_threshold_factor.value\" v-model=\"high_comp_threshold_factor.value\" :min=\"0\" :max=\"1000\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-2408\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-2408\">\n                        <p class=\"card-header-title\">\n                            Threshold redundancy parameter\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"high_comp_threshold_redundancy.value\" v-model.number=\"high_comp_threshold_redundancy.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"high_comp_threshold_redundancy.value\" v-model=\"high_comp_threshold_redundancy.value\" :min=\"0\" :max=\"300\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-5181\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-5181\">\n                        <p class=\"card-header-title\">\n                            Number of structures to generate\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"high_comp_random_nstructures.value\" v-model.number=\"high_comp_random_nstructures.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"high_comp_random_nstructures.value\" v-model=\"high_comp_random_nstructures.value\" :min=\"0\" :max=\"2000\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-1529\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-1529\">\n                        <p class=\"card-header-title\">\n                            Structures to discard at the high-RMSD range\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"high_ana_random_discard_upper.value\" v-model.number=\"high_ana_random_discard_upper.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"high_ana_random_discard_upper.value\" v-model=\"high_ana_random_discard_upper.value\" :min=\"0\" :max=\"500\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-3633\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-3633\">\n                        <p class=\"card-header-title\">\n                            Structures to discard at the low-RMSD range\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"high_ana_random_discard_lower.value\" v-model.number=\"high_ana_random_discard_lower.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"high_ana_random_discard_lower.value\" v-model=\"high_ana_random_discard_lower.value\" :min=\"0\" :max=\"500\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n<section>\n    <b-field label=\"Thresholded randombest fitting mode\">\n        <b-select placeholder=\"\" v-model=\"high_ana_random_mode.value\">\n            <option\n                v-for=\"option in [{'text': 'Binning', 'value': 'binning'}, {'text': 'Lowest RMSD point', 'value': 'lowest_point'}, {'text': 'Median RMSD point', 'value': 'midpoint'}, {'text': 'Highest RMSD point', 'value': 'highest_point'}]\"\n                :value=\"option.value\"\n                :key=\"option.value\">\n                {{ option.text }}\n            </option>\n        </b-select>\n    </b-field>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-8966\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-8966\">\n                        <p class=\"card-header-title\">\n                            Number of bins\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"high_ana_random_bins.value\" v-model.number=\"high_ana_random_bins.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"high_ana_random_bins.value\" v-model=\"high_ana_random_bins.value\" :min=\"0\" :max=\"50\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n<section>\n    <b-field label=\"Low-RMSD analysis and fitting mode\">\n        <b-select placeholder=\"\" v-model=\"low_ana_mode.value\">\n            <option\n                v-for=\"option in [{'text': 'No low-RMSD analysis or fitting', 'value': 'no'}, {'text': 'No low-RMSD fitting, but show greedy intercept for comparison', 'value': 'no,greedy'}, {'text': 'No low-RMSD fitting, but show near-native intercept for comparison', 'value': 'no,nn_intercept'}, {'text': 'Greedy intercept', 'value': 'greedy'}, {'text': 'Fit on greedy intercept, but show near-native intercept for comparison', 'value': 'greedy,nn_intercept'}, {'text': 'Fit on greedy intercept, but show near-native ensemble for comparison', 'value': 'greedy,nn'}, {'text': 'Near-native intercept', 'value': 'nn_intercept'}, {'text': 'Fit on near-native intercept, but show greedy intercept for comparison', 'value': 'nn_intercept,greedy'}, {'text': 'Fit on near-native intercept, but show near-native ensemble for comparison', 'value': 'nn_intercept,nn'}, {'text': 'Near-native ensemble', 'value': 'nn'}, {'text': 'Fit on near-native ensemble, but show greedy intercept for comparison', 'value': 'nn,greedy'}]\"\n                :value=\"option.value\"\n                :key=\"option.value\">\n                {{ option.text }}\n            </option>\n        </b-select>\n    </b-field>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-2451\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-2451\">\n                        <p class=\"card-header-title\">\n                            Cell Low_comp_greedy_poolsize\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"low_comp_greedy_poolsize.value\" v-model.number=\"low_comp_greedy_poolsize.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"low_comp_greedy_poolsize.value\" v-model=\"low_comp_greedy_poolsize.value\" :min=\"0\" :max=\"100\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-9664\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-9664\">\n                        <p class=\"card-header-title\">\n                            Cell Low_ana_greedy_discard\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"low_ana_greedy_discard.value\" v-model.number=\"low_ana_greedy_discard.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"low_ana_greedy_discard.value\" v-model=\"low_ana_greedy_discard.value\" :min=\"0\" :max=\"100\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <b-field label=\"Cell Low_ana_greedy_mode\">\n                <b-input\n                    v-bind:value=\"low_ana_greedy_mode.value\"\n                    v-model=\"low_ana_greedy_mode.value\"\n                    :editable=\"true\"\n                />\n            </b-field>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-2794\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-2794\">\n                        <p class=\"card-header-title\">\n                            Number of bins\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"low_ana_greedy_bins.value\" v-model.number=\"low_ana_greedy_bins.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"low_ana_greedy_bins.value\" v-model=\"low_ana_greedy_bins.value\" :min=\"0\" :max=\"50\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-9866\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-9866\">\n                        <p class=\"card-header-title\">\n                            Cell Low_comp_nn_k\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"low_comp_nn_k.value\" v-model.number=\"low_comp_nn_k.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"low_comp_nn_k.value\" v-model=\"low_comp_nn_k.value\" :min=\"0\" :max=\"100\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-6065\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-6065\">\n                        <p class=\"card-header-title\">\n                            Cell Low_ana_nn_discard\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"low_ana_nn_discard.value\" v-model.number=\"low_ana_nn_discard.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"low_ana_nn_discard.value\" v-model=\"low_ana_nn_discard.value\" :min=\"0\" :max=\"100\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <b-field label=\"Cell Low_ana_nn_mode\">\n                <b-input\n                    v-bind:value=\"low_ana_nn_mode.value\"\n                    v-model=\"low_ana_nn_mode.value\"\n                    :editable=\"true\"\n                />\n            </b-field>\n            <section>\n                <b-collapse class=\"card\" animation=\"slide\" aria-id=\"id-5740\">\n                    <div\n                        slot=\"trigger\"\n                        slot-scope=\"props\"\n                        class=\"card-header\"\n                        role=\"button\"\n                        aria-controls=\"id-5740\">\n                        <p class=\"card-header-title\">\n                            Number of bins\n                        </p>\n                        <a class=\"card-header-icon\">\n                            <b-icon\n                                :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                            </b-icon>\n                        </a>\n                    </div>\n                    <div class=\"card-content\">\n                        <div class=\"content\">\n                            <b-field grouped>\n                                <b-input :value=\"low_ana_nn_bins.value\" v-model.number=\"low_ana_nn_bins.value\" type=\"number\"></b-input>\n                            </b-field>\n                            <b-field>\n                                <b-slider :value=\"low_ana_nn_bins.value\" v-model=\"low_ana_nn_bins.value\" :min=\"0\" :max=\"50\" lazy></b-slider>\n                            </b-field>\n                        </div>\n                    </div>\n                </b-collapse>\n\n            </section>\n            <b-field label=\"Cell Plot\">                \n                <img :src=\"plot.value ? METHOD_get_app_globals().createObjectURL(plot.value) : ''\" width= height=></img>\n            </b-field>\n        <section v-if=\"STATUS.value.transformers\">\n            <b-field label=\"Transformer calc_greedy\">>                 \n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_greedy.color == 'royalblue'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-info\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_greedy.color == 'forestgreen'\"\n                pack=\"fas\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-success\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_greedy.color == 'yellow'\"\n                pack=\"fa\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-warning\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_greedy.color == 'orange'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_greedy.color == 'red'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            </b-field>\n            <b-collapse class=\"card\" :open=\"false\" animation=\"slide\" aria-id=\"id-4108\">\n                <div\n                    v-if=\"STATUS.value.transformers.calc_greedy.status\"\n                    slot=\"trigger\"\n                    slot-scope=\"props\"\n                    class=\"card-header\"\n                    role=\"button\"\n                    aria-controls=\"id-4108\">\n                    <p class=\"card-header-title\">\n                        Error message\n                    </p>\n                    <a class=\"card-header-icon\">\n                        <b-icon\n                            :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                        </b-icon>\n                    </a>\n                </div>\n                <div class=\"card-content\" v-if=\"STATUS.value.transformers.calc_greedy.status\">\n                    <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                        <pre>{{ STATUS.value.transformers.calc_greedy.status }}</pre>\n                    </div>\n                </div>\n            </b-collapse>\n\n        </section>\n        <section v-if=\"STATUS.value.transformers\">\n            <b-field label=\"Transformer calc_nn\">>                 \n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_nn.color == 'royalblue'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-info\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_nn.color == 'forestgreen'\"\n                pack=\"fas\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-success\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_nn.color == 'yellow'\"\n                pack=\"fa\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-warning\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_nn.color == 'orange'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_nn.color == 'red'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            </b-field>\n            <b-collapse class=\"card\" :open=\"false\" animation=\"slide\" aria-id=\"id-5103\">\n                <div\n                    v-if=\"STATUS.value.transformers.calc_nn.status\"\n                    slot=\"trigger\"\n                    slot-scope=\"props\"\n                    class=\"card-header\"\n                    role=\"button\"\n                    aria-controls=\"id-5103\">\n                    <p class=\"card-header-title\">\n                        Error message\n                    </p>\n                    <a class=\"card-header-icon\">\n                        <b-icon\n                            :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                        </b-icon>\n                    </a>\n                </div>\n                <div class=\"card-content\" v-if=\"STATUS.value.transformers.calc_nn.status\">\n                    <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                        <pre>{{ STATUS.value.transformers.calc_nn.status }}</pre>\n                    </div>\n                </div>\n            </b-collapse>\n\n        </section>\n        <section v-if=\"STATUS.value.transformers\">\n            <b-field label=\"Transformer calc_random\">>                 \n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_random.color == 'royalblue'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-info\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_random.color == 'forestgreen'\"\n                pack=\"fas\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-success\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_random.color == 'yellow'\"\n                pack=\"fa\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-warning\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_random.color == 'orange'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_random.color == 'red'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            </b-field>\n            <b-collapse class=\"card\" :open=\"false\" animation=\"slide\" aria-id=\"id-749\">\n                <div\n                    v-if=\"STATUS.value.transformers.calc_random.status\"\n                    slot=\"trigger\"\n                    slot-scope=\"props\"\n                    class=\"card-header\"\n                    role=\"button\"\n                    aria-controls=\"id-749\">\n                    <p class=\"card-header-title\">\n                        Error message\n                    </p>\n                    <a class=\"card-header-icon\">\n                        <b-icon\n                            :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                        </b-icon>\n                    </a>\n                </div>\n                <div class=\"card-content\" v-if=\"STATUS.value.transformers.calc_random.status\">\n                    <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                        <pre>{{ STATUS.value.transformers.calc_random.status }}</pre>\n                    </div>\n                </div>\n            </b-collapse>\n\n        </section>\n        <section v-if=\"STATUS.value.transformers\">\n            <b-field label=\"Transformer calc_specificity\">>                 \n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_specificity.color == 'royalblue'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-info\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_specificity.color == 'forestgreen'\"\n                pack=\"fas\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-success\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_specificity.color == 'yellow'\"\n                pack=\"fa\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-warning\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_specificity.color == 'orange'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_specificity.color == 'red'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            </b-field>\n            <b-collapse class=\"card\" :open=\"false\" animation=\"slide\" aria-id=\"id-9672\">\n                <div\n                    v-if=\"STATUS.value.transformers.calc_specificity.status\"\n                    slot=\"trigger\"\n                    slot-scope=\"props\"\n                    class=\"card-header\"\n                    role=\"button\"\n                    aria-controls=\"id-9672\">\n                    <p class=\"card-header-title\">\n                        Error message\n                    </p>\n                    <a class=\"card-header-icon\">\n                        <b-icon\n                            :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                        </b-icon>\n                    </a>\n                </div>\n                <div class=\"card-content\" v-if=\"STATUS.value.transformers.calc_specificity.status\">\n                    <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                        <pre>{{ STATUS.value.transformers.calc_specificity.status }}</pre>\n                    </div>\n                </div>\n            </b-collapse>\n\n        </section>\n        <section v-if=\"STATUS.value.transformers\">\n            <b-field label=\"Transformer calc_threshold\">>                 \n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_threshold.color == 'royalblue'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-info\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_threshold.color == 'forestgreen'\"\n                pack=\"fas\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-success\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_threshold.color == 'yellow'\"\n                pack=\"fa\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-warning\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_threshold.color == 'orange'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.calc_threshold.color == 'red'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            </b-field>\n            <b-collapse class=\"card\" :open=\"false\" animation=\"slide\" aria-id=\"id-2623\">\n                <div\n                    v-if=\"STATUS.value.transformers.calc_threshold.status\"\n                    slot=\"trigger\"\n                    slot-scope=\"props\"\n                    class=\"card-header\"\n                    role=\"button\"\n                    aria-controls=\"id-2623\">\n                    <p class=\"card-header-title\">\n                        Error message\n                    </p>\n                    <a class=\"card-header-icon\">\n                        <b-icon\n                            :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                        </b-icon>\n                    </a>\n                </div>\n                <div class=\"card-content\" v-if=\"STATUS.value.transformers.calc_threshold.status\">\n                    <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                        <pre>{{ STATUS.value.transformers.calc_threshold.status }}</pre>\n                    </div>\n                </div>\n            </b-collapse>\n\n        </section>\n        <section v-if=\"STATUS.value.transformers\">\n            <b-field label=\"Transformer do_run\">>                 \n            <b-icon\n                v-if=\"STATUS.value.transformers.do_run.color == 'royalblue'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-info\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.do_run.color == 'forestgreen'\"\n                pack=\"fas\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-success\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.do_run.color == 'yellow'\"\n                pack=\"fa\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-warning\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.do_run.color == 'orange'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.do_run.color == 'red'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            </b-field>\n            <b-collapse class=\"card\" :open=\"false\" animation=\"slide\" aria-id=\"id-767\">\n                <div\n                    v-if=\"STATUS.value.transformers.do_run.status\"\n                    slot=\"trigger\"\n                    slot-scope=\"props\"\n                    class=\"card-header\"\n                    role=\"button\"\n                    aria-controls=\"id-767\">\n                    <p class=\"card-header-title\">\n                        Error message\n                    </p>\n                    <a class=\"card-header-icon\">\n                        <b-icon\n                            :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                        </b-icon>\n                    </a>\n                </div>\n                <div class=\"card-content\" v-if=\"STATUS.value.transformers.do_run.status\">\n                    <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                        <pre>{{ STATUS.value.transformers.do_run.status }}</pre>\n                    </div>\n                </div>\n            </b-collapse>\n\n        </section>\n        <section v-if=\"STATUS.value.transformers\">\n            <b-field label=\"Transformer fit_nn\">>                 \n            <b-icon\n                v-if=\"STATUS.value.transformers.fit_nn.color == 'royalblue'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-info\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.fit_nn.color == 'forestgreen'\"\n                pack=\"fas\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-success\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.fit_nn.color == 'yellow'\"\n                pack=\"fa\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-warning\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.fit_nn.color == 'orange'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.fit_nn.color == 'red'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            </b-field>\n            <b-collapse class=\"card\" :open=\"false\" animation=\"slide\" aria-id=\"id-9896\">\n                <div\n                    v-if=\"STATUS.value.transformers.fit_nn.status\"\n                    slot=\"trigger\"\n                    slot-scope=\"props\"\n                    class=\"card-header\"\n                    role=\"button\"\n                    aria-controls=\"id-9896\">\n                    <p class=\"card-header-title\">\n                        Error message\n                    </p>\n                    <a class=\"card-header-icon\">\n                        <b-icon\n                            :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                        </b-icon>\n                    </a>\n                </div>\n                <div class=\"card-content\" v-if=\"STATUS.value.transformers.fit_nn.status\">\n                    <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                        <pre>{{ STATUS.value.transformers.fit_nn.status }}</pre>\n                    </div>\n                </div>\n            </b-collapse>\n\n        </section>\n        <section v-if=\"STATUS.value.transformers\">\n            <b-field label=\"Transformer load_pdb\">>                 \n            <b-icon\n                v-if=\"STATUS.value.transformers.load_pdb.color == 'royalblue'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-info\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.load_pdb.color == 'forestgreen'\"\n                pack=\"fas\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-success\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.load_pdb.color == 'yellow'\"\n                pack=\"fa\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-warning\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.load_pdb.color == 'orange'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.load_pdb.color == 'red'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            </b-field>\n            <b-collapse class=\"card\" :open=\"false\" animation=\"slide\" aria-id=\"id-8988\">\n                <div\n                    v-if=\"STATUS.value.transformers.load_pdb.status\"\n                    slot=\"trigger\"\n                    slot-scope=\"props\"\n                    class=\"card-header\"\n                    role=\"button\"\n                    aria-controls=\"id-8988\">\n                    <p class=\"card-header-title\">\n                        Error message\n                    </p>\n                    <a class=\"card-header-icon\">\n                        <b-icon\n                            :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                        </b-icon>\n                    </a>\n                </div>\n                <div class=\"card-content\" v-if=\"STATUS.value.transformers.load_pdb.status\">\n                    <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                        <pre>{{ STATUS.value.transformers.load_pdb.status }}</pre>\n                    </div>\n                </div>\n            </b-collapse>\n\n        </section>\n        <section v-if=\"STATUS.value.transformers\">\n            <b-field label=\"Transformer validate_cost\">>                 \n            <b-icon\n                v-if=\"STATUS.value.transformers.validate_cost.color == 'royalblue'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-info\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.validate_cost.color == 'forestgreen'\"\n                pack=\"fas\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-success\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.validate_cost.color == 'yellow'\"\n                pack=\"fa\"\n                icon=\"sync-alt\"\n                size=\"is-large\"\n                custom-class=\"fa-spin\"\n                type=\"is-warning\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.validate_cost.color == 'orange'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            <b-icon\n                v-if=\"STATUS.value.transformers.validate_cost.color == 'red'\"\n                pack=\"fa\"\n                icon=\"circle\"\n                size=\"is-large\"\n                type=\"is-danger\">\n            </b-icon>\n            </b-field>\n            <b-collapse class=\"card\" :open=\"false\" animation=\"slide\" aria-id=\"id-8657\">\n                <div\n                    v-if=\"STATUS.value.transformers.validate_cost.status\"\n                    slot=\"trigger\"\n                    slot-scope=\"props\"\n                    class=\"card-header\"\n                    role=\"button\"\n                    aria-controls=\"id-8657\">\n                    <p class=\"card-header-title\">\n                        Error message\n                    </p>\n                    <a class=\"card-header-icon\">\n                        <b-icon\n                            :icon=\"props.open ? 'menu-down' : 'menu-up'\">\n                        </b-icon>\n                    </a>\n                </div>\n                <div class=\"card-content\" v-if=\"STATUS.value.transformers.validate_cost.status\">\n                    <div class=\"content\" style=\"overflow: auto; height: 400px;\">\n                        <pre>{{ STATUS.value.transformers.validate_cost.status }}</pre>\n                    </div>\n                </div>\n            </b-collapse>\n\n        </section>\n\n        </v-app>\n    </div>\n\n    <script src='https://cdn.jsdelivr.net/npm/babel-polyfill/dist/polyfill.min.js'></script>\n    <script src='https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js'></script>\n    <script src='https://cdn.jsdelivr.net/npm/vuetify@2.3.20/dist/vuetify.min.js'></script>\n    <script src=\"https://unpkg.com/buefy/dist/buefy.min.js\"></script>\n    <script type=\"text/javascript\" src=\"./seamless-client.js\"></script>\n    <script type=\"text/javascript\" src=\"./index.js\"></script>\n</body>\n</html>",
  "index.js": "app_globals = {}\n\napp_globals.createObjectURL = URL.createObjectURL\n\n\nseamless_read_cells = {\n  \"text\": [\n    \"plot\"\n  ],\n  \"json\": [\n    \"high_ana_mode\",\n    \"high_comp_threshold_factor\",\n    \"high_comp_threshold_redundancy\",\n    \"high_comp_random_nstructures\",\n    \"high_ana_random_discard_upper\",\n    \"high_ana_random_discard_lower\",\n    \"high_ana_random_mode\",\n    \"high_ana_random_bins\",\n    \"low_ana_mode\",\n    \"low_comp_greedy_poolsize\",\n    \"low_ana_greedy_discard\",\n    \"low_ana_greedy_mode\",\n    \"low_ana_greedy_bins\",\n    \"low_comp_nn_k\",\n    \"low_ana_nn_discard\",\n    \"low_ana_nn_mode\",\n    \"low_ana_nn_bins\"\n  ]\n}\nseamless_write_cells = {\n  \"text\": [],\n  \"json\": [\n    \"high_ana_mode\",\n    \"high_comp_threshold_factor\",\n    \"high_comp_threshold_redundancy\",\n    \"high_comp_random_nstructures\",\n    \"high_ana_random_discard_upper\",\n    \"high_ana_random_discard_lower\",\n    \"high_ana_random_mode\",\n    \"high_ana_random_bins\",\n    \"low_ana_mode\",\n    \"low_comp_greedy_poolsize\",\n    \"low_ana_greedy_discard\",\n    \"low_ana_greedy_mode\",\n    \"low_ana_greedy_bins\",\n    \"low_comp_nn_k\",\n    \"low_ana_nn_discard\",\n    \"low_ana_nn_mode\",\n    \"low_ana_nn_bins\"\n  ]\n}\nseamless_auto_read_cells = []\n\nctx = connect_seamless()\nctx.self.onsharelist = function (sharelist) {\n  sharelist.forEach(cell => {\n    if (ctx[cell].binary) {\n      ctx[cell].onchange = function () {\n        content_type = ctx[cell].content_type\n        if (content_type === null) content_type = \"\"\n        const v = new Blob([this.value], {type: content_type})\n        vm[cell].value = v\n        vm[cell].checksum = this.checksum\n      }\n    }\n    else if (seamless_read_cells[\"json\"].indexOf(cell) >= 0) {\n      ctx[cell].onchange = function () {\n        try {\n          const v = JSON.parse(this.value)\n          vm[cell].value = v\n          vm[cell].checksum = this.checksum\n        }\n        catch (error) {\n          console.log(`Cannot parse server value of cell '${cell}' as JSON`)\n        }\n      }\n    }\n    else if (seamless_read_cells[\"text\"].indexOf(cell) >= 0) {\n      ctx[cell].onchange = function () {\n        vm[cell].value = this.value\n        vm[cell].checksum = this.checksum\n      }\n    }\n\n    if (seamless_auto_read_cells.indexOf(cell) >= 0) {\n      ctx[cell].auto_read = true\n    }\n  })\n}\nwebctx = connect_seamless(null, null, share_namespace=\"status\")\nwebctx.self.onsharelist = function (sharelist) {\n  vis_status = webctx[\"vis_status\"]\n  if (!(vis_status === undefined)) {\n    vis_status.onchange = function() {      \n      let jstatus = JSON.parse(vis_status.value)\n      cells = {}\n      transformers = {}\n      jstatus.nodes.forEach(node => {\n        if (node.type == \"cell\") {\n          cells[node.name] = node\n        }\n        else if (node.type == \"transformer\") {\n          transformers[node.name] = node\n        }\n      })\n      jstatus.cells = cells\n      jstatus.transformers = transformers\n      vm[\"STATUS\"].value = jstatus\n      vm[\"STATUS\"].checksum = vis_status.checksum\n    }\n  }\n}  \n\nfunction seamless_update(cell, value, encoding) {\n  if (!ctx) return\n  if (!ctx.self.sharelist) return\n  if (ctx.self.sharelist.indexOf(cell) < 0) return\n  if (ctx[cell].binary) {\n    ctx[cell].set(value)\n  }\n  else if (encoding == \"json\") {\n    ctx[cell].set(JSON.stringify(value))\n  }\n  else if (encoding == \"text\") {\n    ctx[cell].set(value)\n  }\n}\n\n\nconst app = new Vue({\n  vuetify: new Vuetify(),\n  data() {\n    return {\n      ...{\n        \"high_ana_mode\": {\n          \"checksum\": null,\n          \"value\": \"\"\n        },\n        \"high_comp_threshold_factor\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"high_comp_threshold_redundancy\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"high_comp_random_nstructures\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"high_ana_random_discard_upper\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"high_ana_random_discard_lower\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"high_ana_random_mode\": {\n          \"checksum\": null,\n          \"value\": \"\"\n        },\n        \"high_ana_random_bins\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"low_ana_mode\": {\n          \"checksum\": null,\n          \"value\": \"\"\n        },\n        \"low_comp_greedy_poolsize\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"low_ana_greedy_discard\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"low_ana_greedy_mode\": {\n          \"checksum\": null,\n          \"value\": \"\"\n        },\n        \"low_ana_greedy_bins\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"low_comp_nn_k\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"low_ana_nn_discard\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"low_ana_nn_mode\": {\n          \"checksum\": null,\n          \"value\": \"\"\n        },\n        \"low_ana_nn_bins\": {\n          \"checksum\": null,\n          \"value\": 0\n        },\n        \"plot\": {\n          \"checksum\": null,\n          \"value\": null\n        }\n      }, \n      ...{\n        \"STATUS\": {\n          \"checksum\": null,\n          \"value\": {}\n        }\n      }\n    }\n  },\n  methods: {\n    METHOD_get_app_globals() {\n      return app_globals\n    },\n    METHOD_file_upload(cellname, file) { \n      if (file === undefined) return\n      that = this\n      file.arrayBuffer().then(function(buf){\n        that[cellname].value = new Blob([new Uint8Array(buf)], {type: file.type })\n      })  \n    }\n    \n  },\n  watch: {\n    \"high_ana_mode.value\": function (value) {\n      seamless_update(\"high_ana_mode\", value, \"json\")\n    },\n    \"high_comp_threshold_factor.value\": function (value) {\n      seamless_update(\"high_comp_threshold_factor\", value, \"json\")\n    },\n    \"high_comp_threshold_redundancy.value\": function (value) {\n      seamless_update(\"high_comp_threshold_redundancy\", value, \"json\")\n    },\n    \"high_comp_random_nstructures.value\": function (value) {\n      seamless_update(\"high_comp_random_nstructures\", value, \"json\")\n    },\n    \"high_ana_random_discard_upper.value\": function (value) {\n      seamless_update(\"high_ana_random_discard_upper\", value, \"json\")\n    },\n    \"high_ana_random_discard_lower.value\": function (value) {\n      seamless_update(\"high_ana_random_discard_lower\", value, \"json\")\n    },\n    \"high_ana_random_mode.value\": function (value) {\n      seamless_update(\"high_ana_random_mode\", value, \"json\")\n    },\n    \"high_ana_random_bins.value\": function (value) {\n      seamless_update(\"high_ana_random_bins\", value, \"json\")\n    },\n    \"low_ana_mode.value\": function (value) {\n      seamless_update(\"low_ana_mode\", value, \"json\")\n    },\n    \"low_comp_greedy_poolsize.value\": function (value) {\n      seamless_update(\"low_comp_greedy_poolsize\", value, \"json\")\n    },\n    \"low_ana_greedy_discard.value\": function (value) {\n      seamless_update(\"low_ana_greedy_discard\", value, \"json\")\n    },\n    \"low_ana_greedy_mode.value\": function (value) {\n      seamless_update(\"low_ana_greedy_mode\", value, \"json\")\n    },\n    \"low_ana_greedy_bins.value\": function (value) {\n      seamless_update(\"low_ana_greedy_bins\", value, \"json\")\n    },\n    \"low_comp_nn_k.value\": function (value) {\n      seamless_update(\"low_comp_nn_k\", value, \"json\")\n    },\n    \"low_ana_nn_discard.value\": function (value) {\n      seamless_update(\"low_ana_nn_discard\", value, \"json\")\n    },\n    \"low_ana_nn_mode.value\": function (value) {\n      seamless_update(\"low_ana_nn_mode\", value, \"json\")\n    },\n    \"low_ana_nn_bins.value\": function (value) {\n      seamless_update(\"low_ana_nn_bins\", value, \"json\")\n    },\n  },\n})\n\nvm = app.$mount('#app')"
}
