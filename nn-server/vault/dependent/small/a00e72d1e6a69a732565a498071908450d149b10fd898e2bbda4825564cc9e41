"import ast\ndef analyze_dependencies(pycode:str, package_name:str):\n    tree = ast.parse(pycode)\n    deps = set()\n    for node in tree.body:\n        if isinstance(node, ast.Import):\n            for name in node.names:\n                dep = name.name\n                if package_name is None or not dep.startswith(package_name):\n                    continue\n                deps.add(dep)\n        elif isinstance(node, ast.ImportFrom):\n            if node.level == 0:\n                if package_name is None or not node.module.startswith(package_name):\n                    continue\n            dep = \".\" * node.level \n            if node.module is not None:\n                dep += node.module\n            deps.add(dep)\n        else:\n            continue\n        \n    return sorted(list(deps))\nif __name__ == \"__main__\":\n    import sys\n    pycode = open(sys.argv[1]).read()\n    if len(sys.argv) == 3:\n        package_name = sys.argv[2]\n    else:\n        package_name = None\n    deps = analyze_dependencies(pycode, package_name)\n    print(deps)\n"
